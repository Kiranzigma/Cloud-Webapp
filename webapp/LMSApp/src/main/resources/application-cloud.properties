

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)

app.message=This the profile setup for ${spring.application.name} specific to cloud environment
rds.database = random
spring.datasource.url = jdbc:mysql://${rds.database}:3306/csye6225

spring.datasource.username = csye6225master
spring.datasource.password = csye6225password


environment = cloud
bucketname = random
cloud.snsTopic= random

# Logging Configuration
logging.file=${catalina.base}/logs/csye6225.log

#Metrics
publish.metrics=true
metrics.server.hostname=localhost
metrics.server.port=8125

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.id.new_generator_mappings=false

#Image Upload
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
storage.location=./uploads
